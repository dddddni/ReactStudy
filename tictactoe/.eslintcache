[{"C:\\Users\\shkim\\Desktop\\React\\ReactStudy\\tictactoe\\src\\index.js":"1","C:\\Users\\shkim\\Desktop\\React\\ReactStudy\\tictactoe\\src\\App.js":"2","C:\\Users\\shkim\\Desktop\\React\\ReactStudy\\tictactoe\\src\\reportWebVitals.js":"3","C:\\Users\\shkim\\Desktop\\React\\ReactStudy\\tictactoe\\src\\Tictactoe.js":"4","C:\\Users\\shkim\\Desktop\\React\\ReactStudy\\tictactoe\\src\\Tictactoe2.js":"5","C:\\Users\\shkim\\Desktop\\React\\ReactStudy\\tictactoe\\src\\Board.js":"6","C:\\Users\\shkim\\Desktop\\React\\ReactStudy\\tictactoe\\src\\Square.js":"7","C:\\Users\\shkim\\Desktop\\React\\ReactStudy\\tictactoe\\src\\CalculateWinner.js":"8"},{"size":278,"mtime":1607490207218,"results":"9","hashOfConfig":"10"},{"size":528,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":3888,"mtime":1607491195139,"results":"13","hashOfConfig":"10"},{"size":4392,"mtime":1607921624738,"results":"14","hashOfConfig":"10"},{"size":692,"mtime":1607924296670,"results":"15","hashOfConfig":"10"},{"size":573,"mtime":1607920545931,"results":"16","hashOfConfig":"10"},{"size":688,"mtime":1607909354924,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"fn0q66",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"C:\\Users\\shkim\\Desktop\\React\\ReactStudy\\tictactoe\\src\\index.js",["38","39"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Tictactoe from './Tictactoe';\nimport Tictactoe2 from './Tictactoe2';\n\nReactDOM.render(\n  // <Tictactoe />,\n  <Tictactoe2 />,\n  document.getElementById('root')\n);\n\n",["40","41"],"C:\\Users\\shkim\\Desktop\\React\\ReactStudy\\tictactoe\\src\\App.js",[],"C:\\Users\\shkim\\Desktop\\React\\ReactStudy\\tictactoe\\src\\reportWebVitals.js",[],["42","43"],"C:\\Users\\shkim\\Desktop\\React\\ReactStudy\\tictactoe\\src\\Tictactoe.js",[],"C:\\Users\\shkim\\Desktop\\React\\ReactStudy\\tictactoe\\src\\Tictactoe2.js",["44"],"import React from 'react';\r\nimport Board from './Board';\r\nimport CalculateWinner from './CalculateWinner';\r\n\r\nclass Game extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            history : [{\r\n                squares : Array(9).fill(null),\r\n                position : -1,\r\n            }],\r\n            stepNumber : 0,\r\n            xIsNext : true,\r\n            OrderAsc : true,\r\n        }\r\n    }\r\n\r\n    handleClick(i){\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n\r\n        if(CalculateWinner(squares) || squares[i]){\r\n            return;\r\n        }\r\n\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history : history.concat([{\r\n                squares : squares,\r\n                position : i,\r\n            }]),\r\n            stepNumber : history.length,\r\n            xIsNext : !this.state.xIsNext\r\n        })\r\n    }\r\n\r\n    jumpTo(step){\r\n        this.setState({\r\n            stepNumber : step,\r\n            xIsNext : (step % 2) === 0,\r\n        })\r\n    }\r\n\r\n    handleOrderAscChange = () => {\r\n        this.setState({\r\n            OrderAsc : !this.state.OrderAsc,\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const win = CalculateWinner(current.squares);  \r\n        let winner;\r\n        let pos = {\r\n            pos1 : '',\r\n            pos2 : '',\r\n            pos3 : '',\r\n        }\r\n        \r\n        // 승자가 있는 경우에 값 가져옴.\r\n        if(win){\r\n            win.map((a,b) => {\r\n                 if((win[b] === 'X') || (win[b] === 'O')){\r\n                     winner = win[b]\r\n                 } else if(pos.pos1 === ''){\r\n                    pos.pos1 = win[b]\r\n                 } else if (pos.pos2 === '' ){\r\n                    pos.pos2 = win[b]\r\n                 } else if(pos.pos3 === '' ){\r\n                    pos.pos3 = win[b]\r\n                 }\r\n            })\r\n        }\r\n\r\n        const moves = history.map((step, move) => {                   \r\n        // const desc = move ? 'Go to move #' + move : 'Go to game start';\r\n        // 1. 이동 기록 목록에서 특정 형식(행, 열)으로 각 이동의 위치를 표시                \r\n        // 현재 위치\r\n        const position = history[move].position;\r\n        // 열 값(세로)\r\n        const row = parseInt(position % 3);\r\n        // 행 값(가로)\r\n        const column = parseInt(position / 3);\r\n        const desc = move ? 'Go to move # ' + move + '(' +(column + ',' + row) + ')' : 'Go to game start';\r\n\r\n        return(\r\n            <li key = {move}>\r\n            {move === this.state.stepNumber ? \r\n                <button onClick = {() => this.jumpTo(move)}>\r\n                    <b>{desc}</b>\r\n                </button> : \r\n                <button onClick = {() => this.jumpTo(move)}>\r\n                    {desc}\r\n                </button>}\r\n            </li>\r\n            )\r\n        })\r\n    \r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n        } else {\r\n            // 6. 승자가 없는 경우 무승부라는 메시지를 표시해주세요\r\n            if(this.state.stepNumber >= 9){\r\n                status = 'Draw!';    \r\n            }\r\n            else{\r\n                status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n            }\r\n        }\r\n\r\n        return (\r\n        <div className=\"game\">\r\n            <div className=\"game-board\">\r\n            <Board \r\n                squares = {current.squares}\r\n                onClick = {(i) => this.handleClick(i)}\r\n                winpos = {pos}\r\n            />\r\n            </div>\r\n            <div className=\"game-info\">\r\n                <div>{status}</div>\r\n                {/* 4. 오름차순이나 내림차순으로 이동을 정렬하도록 토글 버튼을 추가해주세요. */}\r\n                {this.state.OrderAsc ? <button onClick = {this.handleOrderAscChange}>오름 차순</button> : <button onClick = {this.handleOrderAscChange}>내림 차순</button>}\r\n                {this.state.OrderAsc ? <ol>{moves}</ol> : <ol>{moves.reverse()}</ol>}\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;","C:\\Users\\shkim\\Desktop\\React\\ReactStudy\\tictactoe\\src\\Board.js",[],"C:\\Users\\shkim\\Desktop\\React\\ReactStudy\\tictactoe\\src\\Square.js",[],"C:\\Users\\shkim\\Desktop\\React\\ReactStudy\\tictactoe\\src\\CalculateWinner.js",[],{"ruleId":"45","severity":1,"message":"46","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":11},{"ruleId":"45","severity":1,"message":"49","line":5,"column":8,"nodeType":"47","messageId":"48","endLine":5,"endColumn":17},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"50","replacedBy":"54"},{"ruleId":"52","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":65,"column":27,"nodeType":"58","messageId":"59","endLine":65,"endColumn":29},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Tictactoe' is defined but never used.","no-native-reassign",["60"],"no-negated-in-lhs",["61"],["60"],["61"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]